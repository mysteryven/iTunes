{"version":3,"sources":["js/playlist.js"],"names":["view","el","template","init","$el","$","render","songs","data","html","find","attr","playlistCover","playlistName","tags","empty","map","index","li","name","artist","append","model","songIds","getPlaylist","id","axios","get","then","response","playlist","trackIds","getSongs","Promise","resolve","reject","i","url","res","cover","al","picUrl","artists","ar","item","push","length","controller","bindEventHub","bindEvents","window","eventHub","on","console","log","playlistId","removeClass","css","e","currentTarget","emit"],"mappings":"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","file":"playlist.94d1e57a.map","sourceRoot":"../src","sourcesContent":["{\n    let view = {\n        el: '#songList',\n        template: `\n        <div class=\"song-list-header\">\n            <svg class=\"icon arrow\" aria-hidden=\"true\" id=\"back\">\n                <use xlink:href=\"#icon-leftarrowpx\"></use>\n            </svg>\n            <span>歌单</span>\n        </div>\n        <div class=\"song-list-info\">\n            <div class=\"song-list-cover\">\n            <img id=\"playlistCover\" src=\"\" alt=\"\" width=100 height=100>\n            <div class=\"description\">\n                <span id=\"playlistName\">{{playlistName}}</span>\n                <span id=\"tags\"></span>\n            </div>\n            </div>\n            <ul>\n            <li>\n                <div class=\"index\">1</div>\n                <div class=\"song-info\">\n                <span>穿越时空的思念</span>\n                <span>奏有</span>\n                </div>  \n            </li>\n            </ul>\n        </div>\n        `,\n        init() {\n            this.$el = $(this.el)\n        },\n        render(songs, data) {\n            this.$el.html(this.template)\n            if (data) {\n                this.$el.find('#playlistCover').attr('src', data.playlistCover)\n                this.$el.find('#playlistName').html(data.playlistName)\n                this.$el.find('#tags').html(data.tags)\n            }\n            if (songs) {\n                this.$el.find('ul').empty()\n                songs.map((data, index) => {\n                    let li = `\n                    <li>\n                        <div class=\"index\">${index+1}</div>\n                        <div class=\"song-info\">\n                            <span>${data.name}</span>\n                            <span>${data.artist}</span>\n                        </div>  \n                    </li>\n                    ` \n                    this.$el.find('ul').append(li)\n                })\n            }\n        }\n    }\n\n    let model = {\n        data: {\n            songIds: [],\n            songs: []\n        },\n        getPlaylist(id) {\n            return axios.get('/playlist/detail?id=' + id).then((response) => {\n                this.data.songIds = response.data.playlist.trackIds\n            })\n        },\n        getSongs() {\n            this.data.songs = []\n            return new Promise((resolve, reject) => {\n                let songIds = this.data.songIds\n                for(let i = 0; i < songIds.length; i++) {\n                    axios.get('/song/url?id=' + songIds[i].id).then((response) => {\n                        let url = response.data.data[0].url\n                        return axios.get('/song/detail?ids=' + songIds[i].id).then((res)=> {\n                            let name = res.data.songs[0].name\n                            let cover = res.data.songs[0].al.picUrl\n                            let artists = ''\n                            res.data.songs[0].ar.map((data, index) => {\n                                if (index === 0) {\n                                    artists = data.name\n                                } else {\n                                    artists +=  ('/' + data.name)\n                                }\n                            })\n                            let item = {\n                                url: url,\n                                name: name,\n                                artist: artists,\n                                cover: cover\n                            }\n                            this.data.songs.push(item)\n                            if (i === songIds.length-1) {\n                                resolve()\n                            } \n                        })\n                    })\n                }\n            })\n        }\n    }\n\n    let controller = {\n        init(view, model) {\n            this.view = view\n            this.model = model\n            this.view.init()\n            this.view.render()\n            this.bindEventHub()\n            this.bindEvents()\n        },\n        bindEventHub() {\n            window.eventHub.on('openPlaylist', (data) => {\n                console.log(data)\n                this.model.getPlaylist(data.playlistId).then(() => {\n                    this.model.getSongs().then(()=> {\n                        $('.loading').removeClass('active')\n                        this.view.render(this.model.data.songs, data)\n                        $('#songList').css({\n                            'transform': 'translateX(0px)',\n                        })\n                    })\n                })\n            })\n        },\n        bindEvents() {\n            this.view.$el.on('click', '#back', () => {\n                $('#songList').css({\n                    'transform': 'translateX(380px)',\n                })\n            })\n            this.view.$el.on('click', 'ul > li', (e) => {\n                let index = $(e.currentTarget).index()\n                window.eventHub.emit('playSong', this.model.data.songs[index])\n            })\n        }\n    }\n\n    controller.init(view, model)\n}"]}